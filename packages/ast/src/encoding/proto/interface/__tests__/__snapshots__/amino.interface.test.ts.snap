// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenesisState interface 1`] = `
"/** GenesisState defines the auth module's genesis state. */
export interface GenesisStateAmino {
  /** params defines all the paramaters of the module. */
  params?: ParamsAmino;
  /** accounts are the accounts present at genesis. */
  accounts?: AnyAmino[];
}"
`;

exports[`MsgSend amino interface 1`] = `
"/** MsgSend represents a message to send coins from one account to another. */
export interface MsgSendAmino {
  from_address?: string;
  to_address?: string;
  amount?: CoinAmino[];
}"
`;

exports[`PageRequest interface 1`] = `
"/**
 * PageRequest is to be embedded in gRPC request messages for efficient
 * pagination. Ex:
 * 
 *  message SomeRequest {
 *          Foo some_parameter = 1;
 *          PageRequest pagination = 2;
 *  }
 */
export interface PageRequestAmino {
  /**
   * key is a value returned in PageResponse.next_key to begin
   * querying the next page most efficiently. Only one of offset or key
   * should be set.
   */
  key?: string;
  /**
   * offset is a numeric offset that can be used when key is unavailable.
   * It is less efficient than using key. Only one of offset or key should
   * be set.
   */
  offset?: string;
  /**
   * limit is the total number of results to be returned in the result page.
   * If left empty it will default to a value to be set by each app.
   */
  limit?: string;
  /**
   * count_total is set to true  to indicate that the result set should include
   * a count of the total number of items available for pagination in UIs.
   * count_total is only respected when offset is used. It is ignored when key
   * is set.
   */
  count_total?: boolean;
  /**
   * reverse is set to true if results are to be returned in the descending order.
   * 
   * Since: cosmos-sdk 0.43
   */
  reverse?: boolean;
}"
`;

exports[`PageResponse interface 1`] = `
"/**
 * PageResponse is to be embedded in gRPC response messages where the
 * corresponding request message has used PageRequest.
 * 
 *  message SomeResponse {
 *          repeated Bar results = 1;
 *          PageResponse page = 2;
 *  }
 */
export interface PageResponseAmino {
  /**
   * next_key is the key to be passed to PageRequest.key to
   * query the next page most efficiently. It will be empty if
   * there are no more results.
   */
  next_key?: string;
  /**
   * total is total number of results available if PageRequest.count_total
   * was set, its value is undefined otherwise
   */
  total?: string;
}"
`;

exports[`confio/proofs.proto ExistenceProof 1`] = `
"/**
 * ExistenceProof takes a key and a value and a set of steps to perform on it.
 * The result of peforming all these steps will provide a "root hash", which can
 * be compared to the value in a header.
 * 
 * Since it is computationally infeasible to produce a hash collission for any of the used
 * cryptographic hash functions, if someone can provide a series of operations to transform
 * a given key and value into a root hash that matches some trusted root, these key and values
 * must be in the referenced merkle tree.
 * 
 * The only possible issue is maliablity in LeafOp, such as providing extra prefix data,
 * which should be controlled by a spec. Eg. with lengthOp as NONE,
 * prefix = FOO, key = BAR, value = CHOICE
 * and
 * prefix = F, key = OOBAR, value = CHOICE
 * would produce the same value.
 * 
 * With LengthOp this is tricker but not impossible. Which is why the "leafPrefixEqual" field
 * in the ProofSpec is valuable to prevent this mutability. And why all trees should
 * length-prefix the data before hashing it.
 */
export interface ExistenceProofAmino {
  key?: string;
  value?: string;
  leaf?: LeafOpAmino;
  path?: InnerOpAmino[];
}"
`;

exports[`cosmos/auth/v1beta1/auth.proto BaseAccount 1`] = `
"/**
 * BaseAccount defines a base account type. It contains all the necessary fields
 * for basic account functionality. Any custom account type should extend this
 * type for additional functionality (e.g. vesting).
 */
export interface BaseAccountAmino {
  address?: string;
  pub_key?: AnyAmino;
  account_number?: string;
  sequence?: string;
}"
`;

exports[`cosmos/authz/v1beta1/authz.proto Grant 1`] = `
"/**
 * Grant gives permissions to execute
 * the provide method with expiration time.
 */
export interface GrantAmino {
  authorization?: AnyAmino;
  /**
   * time when the grant will expire and will be pruned. If null, then the grant
   * doesn't have a time expiration (other conditions  in \`authorization\`
   * may apply to invalidate the grant)
   */
  expiration?: string;
}"
`;

exports[`cosmos/authz/v1beta1/authz.proto GrantAuthorization 1`] = `
"/**
 * GrantAuthorization extends a grant with both the addresses of the grantee and granter.
 * It is used in genesis.proto and query.proto
 */
export interface GrantAuthorizationAmino {
  granter?: string;
  grantee?: string;
  authorization?: AnyAmino;
  expiration?: string;
}"
`;

exports[`cosmos/authz/v1beta1/query.proto QueryGrantsRequest 1`] = `
"/** QueryGrantsRequest is the request type for the Query/Grants RPC method. */
export interface QueryGrantsRequestAmino {
  granter?: string;
  grantee?: string;
  /** Optional, msg_type_url, when set, will query only grants matching given msg type. */
  msg_type_url?: string;
  /** pagination defines an pagination for the request. */
  pagination?: PageRequestAmino;
}"
`;

exports[`misc/eval_request EvalRequest 1`] = `
"export interface EvalRequestAmino {
  /**
   * Bindings for the external variables.  The types SHOULD be compatible
   * with the type environment in [CheckRequest][google.api.expr.conformance.v1alpha1.CheckRequest], if checked.
   */
  bindings?: {
    [key: string]: ExprValueAmino;
  };
  refs?: {
    [key: string]: IdRefAmino;
  };
  test_num?: number;
  test_string?: string;
  test_bool?: boolean;
  instantiate_permission?: AccessConfigAmino;
  /** [(gogoproto.nullable) = false] wouldn't work in this case */
  id?: string;
  name?: string;
  test_array?: string[];
  opt: FeatureSet_Utf8Validation;
  graph?: TestNest_GraphAmino;
  /** deprecated option */
  deprecated?: string;
  false_deprecated?: string;
}"
`;

exports[`osmosis/gamm/v1beta1/tx.proto MsgJoinPool 1`] = `
"/**
 * ===================== MsgJoinPool
 * This is really MsgJoinPoolNoSwap
 */
export interface MsgJoinPoolAmino {
  sender?: string;
  pool_id?: string;
  share_out_amount?: string;
  token_in_maxs?: CoinAmino[];
}"
`;
